{
  "posts": {
    "about": {
      "id": "about",
      "name": "about.md",
      "title": "关于我",
      "description": "我是一名全栈开发者，专注于现代 Web 技术栈。...",
      "category": "About",
      "content": "# 关于我\n\n## 👋 你好！\n\n我是一名全栈开发者，专注于现代 Web 技术栈。\n\n## 🛠️ 技术栈\n\n- **前端**: React, Next.js, TypeScript, Tailwind CSS\n- **后端**: Node.js, Python, PostgreSQL, MongoDB\n- **工具**: Git, Docker, VS Code, Figma\n\n## 📝 博客主题\n\n这个博客主要分享：\n\n- React 和 Next.js 开发经验\n- TypeScript 最佳实践\n- 前端工程化\n- 全栈开发技巧\n\n## 📫 联系方式\n\n- Email: developer@example.com\n- GitHub: @developer\n- Twitter: @developer\n\n感谢你的访问！\n",
      "path": "/data/posts/about/about.md",
      "lastModified": "2025-09-10T03:30:15.548Z"
    },
    "test-article": {
      "id": "test-article",
      "name": "test-article.md",
      "title": "测试文章",
      "description": "这是一个测试文章，用来验证配置文件生成功能。...",
      "category": "About",
      "content": "# 测试文章\n\n## 这是测试文章\n\n这是一个测试文章，用来验证配置文件生成功能。\n\n### 功能特点\n\n- 自动分类\n- 菜单生成\n- 客户端加载\n\n## 总结\n\n测试成功！🎉\n",
      "path": "/data/posts/about/test-article.md",
      "lastModified": "2025-09-10T03:32:01.829Z"
    },
    "nextjs-guide": {
      "id": "nextjs-guide",
      "name": "nextjs-guide.md",
      "title": "Next.js 开发指南",
      "description": "Next.js 13 引入了新的 App Router，基于 React Server Components。...",
      "category": "Nextjs",
      "content": "# Next.js 开发指南\n\n## App Router\n\nNext.js 13 引入了新的 App Router，基于 React Server Components。\n\n### 文件结构\n\n```\napp/\n  layout.tsx      # 根布局\n  page.tsx        # 首页\n  about/\n    page.tsx      # /about 页面\n  blog/\n    page.tsx      # /blog 页面\n    [slug]/\n      page.tsx    # /blog/[slug] 动态路由\n```\n\n### 服务端组件\n\n```typescript\n// app/page.tsx\nasync function HomePage() {\n  const data = await fetch('https://api.example.com/data');\n  const posts = await data.json();\n\n  return (\n    <div>\n      <h1>博客文章</h1>\n      {posts.map(post => (\n        <article key={post.id}>\n          <h2>{post.title}</h2>\n          <p>{post.excerpt}</p>\n        </article>\n      ))}\n    </div>\n  );\n}\n\nexport default HomePage;\n```\n\n### 客户端组件\n\n```typescript\n'use client'\n\nimport { useState } from 'react';\n\nfunction Counter() {\n  const [count, setCount] = useState(0);\n\n  return (\n    <button onClick={() => setCount(count + 1)}>\n      点击次数: {count}\n    </button>\n  );\n}\n\nexport default Counter;\n```\n\n## 数据获取\n\n### Server Actions\n\n```typescript\n// app/actions.ts\n'use server'\n\nexport async function createPost(formData: FormData) {\n  const title = formData.get('title') as string;\n  const content = formData.get('content') as string;\n\n  // 保存到数据库\n  await savePost({ title, content });\n\n  redirect('/blog');\n}\n```\n\nNext.js 提供了强大的全栈开发能力！\n",
      "path": "/data/posts/nextjs/nextjs-guide.md",
      "lastModified": "2025-09-10T03:30:15.548Z"
    },
    "react-hooks": {
      "id": "react-hooks",
      "name": "react-hooks.md",
      "title": "React Hooks 完全指南",
      "description": "React Hooks 是 React 16.8 引入的新特性，它让你在不编写 class 的情况下使用 state 以及其他的 React 特性。...",
      "category": "React",
      "content": "# React Hooks 完全指南\n\n## 什么是 React Hooks？\n\nReact Hooks 是 React 16.8 引入的新特性，它让你在不编写 class 的情况下使用 state 以及其他的 React 特性。\n\n## 常用的 Hooks\n\n### useState\n\n```javascript\nimport React, { useState } from 'react';\n\nfunction Counter() {\n  const [count, setCount] = useState(0);\n\n  return (\n    <div>\n      <p>You clicked {count} times</p>\n      <button onClick={() => setCount(count + 1)}>\n        Click me\n      </button>\n    </div>\n  );\n}\n```\n\n### useEffect\n\n```javascript\nimport React, { useState, useEffect } from 'react';\n\nfunction Example() {\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    document.title = `You clicked ${count} times`;\n  });\n\n  return (\n    <div>\n      <p>You clicked {count} times</p>\n      <button onClick={() => setCount(count + 1)}>\n        Click me\n      </button>\n    </div>\n  );\n}\n```\n\n## 自定义 Hooks\n\n自定义 Hook 是一个函数，其名称以 \"use\" 开头，函数内部可以调用其他的 Hook。\n\n```javascript\nimport { useState, useEffect } from 'react';\n\nfunction useCounter(initialValue = 0) {\n  const [count, setCount] = useState(initialValue);\n\n  const increment = () => setCount(count + 1);\n  const decrement = () => setCount(count - 1);\n  const reset = () => setCount(initialValue);\n\n  return { count, increment, decrement, reset };\n}\n```\n\n## 总结\n\nReact Hooks 提供了一种更简洁、更灵活的方式来编写 React 组件，让函数组件拥有了类组件的所有能力。\n",
      "path": "/data/posts/react/react-hooks.md",
      "lastModified": "2025-09-10T03:30:15.548Z"
    },
    "dev-tools-guide": {
      "id": "dev-tools-guide",
      "name": "dev-tools-guide.md",
      "title": "开发者工具指南",
      "description": "作为一名现代前端开发者，选择合适的工具可以大大提高开发效率和代码质量。...",
      "category": "Tools",
      "content": "# 开发者工具指南\n\n## 前端开发必备工具\n\n作为一名现代前端开发者，选择合适的工具可以大大提高开发效率和代码质量。\n\n## 编辑器和 IDE\n\n### Visual Studio Code\n- **免费且功能强大**\n- **丰富的插件生态**\n- **内置 Git 支持**\n- **优秀的 TypeScript 支持**\n\n### 推荐插件\n- **Prettier** - 代码格式化\n- **ESLint** - 代码检查\n- **GitLens** - Git 增强功能\n- **Auto Rename Tag** - HTML 标签重命名\n\n## 版本控制\n\n### Git\n- **分布式版本控制系统**\n- **强大的分支管理**\n- **代码回溯和协作**\n\n### GitHub\n- **代码托管平台**\n- **Issue 和项目管理**\n- **Actions 自动化工作流**\n- **Pages 静态网站部署**\n\n## 包管理器\n\n### npm\n- **Node.js 官方包管理器**\n- **庞大的包生态**\n- **脚本运行和依赖管理**\n\n### Yarn\n- **更快的包安装速度**\n- **更好的依赖解析**\n- **Workspace 多包管理**\n\n### pnpm\n- **磁盘空间节省**\n- **更快的安装速度**\n- **严格的依赖管理**\n\n## 总结\n\n选择合适的工具可以让开发过程更加愉悦和高效。建议从 VS Code 开始，逐步探索和使用其他工具。\n",
      "path": "/data/posts/tools/dev-tools-guide.md",
      "lastModified": "2025-09-10T03:41:09.772Z"
    },
    "typescript-tips": {
      "id": "typescript-tips",
      "name": "typescript-tips.md",
      "title": "TypeScript 实用技巧",
      "description": "```typescript // 类型断言的两种语法 const someValue: unknown = \"this is a string\";...",
      "category": "Typescript",
      "content": "# TypeScript 实用技巧\n\n## 类型断言\n\n```typescript\n// 类型断言的两种语法\nconst someValue: unknown = \"this is a string\";\nconst strLength1: number = (someValue as string).length;\nconst strLength2: number = (<string>someValue).length;\n```\n\n## 联合类型\n\n```typescript\ntype Status = \"loading\" | \"success\" | \"error\";\n\nfunction handleStatus(status: Status) {\n  switch (status) {\n    case \"loading\":\n      return \"正在加载...\";\n    case \"success\":\n      return \"加载成功！\";\n    case \"error\":\n      return \"加载失败！\";\n  }\n}\n```\n\n## 泛型\n\n```typescript\nfunction identity<T>(arg: T): T {\n  return arg;\n}\n\n// 使用\nconst output1 = identity<string>(\"myString\");\nconst output2 = identity<number>(100);\n```\n\n## 实用工具类型\n\n```typescript\ninterface User {\n  id: number;\n  name: string;\n  email: string;\n  age: number;\n}\n\n// Partial - 所有属性变为可选\ntype PartialUser = Partial<User>;\n\n// Pick - 选择特定属性\ntype UserInfo = Pick<User, \"name\" | \"email\">;\n\n// Omit - 排除特定属性\ntype UserWithoutId = Omit<User, \"id\">;\n```\n\n这些技巧可以帮助你更好地使用 TypeScript！\n",
      "path": "/data/posts/typescript/typescript-tips.md",
      "lastModified": "2025-09-10T03:30:15.548Z"
    }
  },
  "menu": {
    "categories": [
      "About",
      "Nextjs",
      "React",
      "Tools",
      "Typescript"
    ],
    "items": [
      {
        "id": "about",
        "title": "关于我",
        "category": "About",
        "description": "我是一名全栈开发者，专注于现代 Web 技术栈。..."
      },
      {
        "id": "test-article",
        "title": "测试文章",
        "category": "About",
        "description": "这是一个测试文章，用来验证配置文件生成功能。..."
      },
      {
        "id": "nextjs-guide",
        "title": "Next.js 开发指南",
        "category": "Nextjs",
        "description": "Next.js 13 引入了新的 App Router，基于 React Server Components。..."
      },
      {
        "id": "react-hooks",
        "title": "React Hooks 完全指南",
        "category": "React",
        "description": "React Hooks 是 React 16.8 引入的新特性，它让你在不编写 class 的情况下使用 state 以及其他的 React 特性。..."
      },
      {
        "id": "dev-tools-guide",
        "title": "开发者工具指南",
        "category": "Tools",
        "description": "作为一名现代前端开发者，选择合适的工具可以大大提高开发效率和代码质量。..."
      },
      {
        "id": "typescript-tips",
        "title": "TypeScript 实用技巧",
        "category": "Typescript",
        "description": "```typescript // 类型断言的两种语法 const someValue: unknown = \"this is a string\";..."
      }
    ],
    "groupedItems": {
      "About": [
        {
          "id": "test-article",
          "title": "测试文章",
          "category": "About",
          "description": "这是一个测试文章，用来验证配置文件生成功能。..."
        },
        {
          "id": "about",
          "title": "关于我",
          "category": "About",
          "description": "我是一名全栈开发者，专注于现代 Web 技术栈。..."
        }
      ],
      "Nextjs": [
        {
          "id": "nextjs-guide",
          "title": "Next.js 开发指南",
          "category": "Nextjs",
          "description": "Next.js 13 引入了新的 App Router，基于 React Server Components。..."
        }
      ],
      "React": [
        {
          "id": "react-hooks",
          "title": "React Hooks 完全指南",
          "category": "React",
          "description": "React Hooks 是 React 16.8 引入的新特性，它让你在不编写 class 的情况下使用 state 以及其他的 React 特性。..."
        }
      ],
      "Tools": [
        {
          "id": "dev-tools-guide",
          "title": "开发者工具指南",
          "category": "Tools",
          "description": "作为一名现代前端开发者，选择合适的工具可以大大提高开发效率和代码质量。..."
        }
      ],
      "Typescript": [
        {
          "id": "typescript-tips",
          "title": "TypeScript 实用技巧",
          "category": "Typescript",
          "description": "```typescript // 类型断言的两种语法 const someValue: unknown = \"this is a string\";..."
        }
      ]
    }
  },
  "lastUpdated": "2025-09-10T03:41:14.385Z"
}